# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import SensorService_pb2 as SensorService__pb2


class SensorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListarDispositivos = channel.unary_unary(
                '/sensor_service.SensorService/ListarDispositivos',
                request_serializer=SensorService__pb2.EmptyMessage.SerializeToString,
                response_deserializer=SensorService__pb2.ListaDispositivos.FromString,
                )
        self.ListarLeiturasSensores = channel.unary_unary(
                '/sensor_service.SensorService/ListarLeiturasSensores',
                request_serializer=SensorService__pb2.Parametros.SerializeToString,
                response_deserializer=SensorService__pb2.ListaDados.FromString,
                )
        self.ConsultarUltimaLeituraSensor = channel.unary_unary(
                '/sensor_service.SensorService/ConsultarUltimaLeituraSensor',
                request_serializer=SensorService__pb2.Parametros.SerializeToString,
                response_deserializer=SensorService__pb2.Dado.FromString,
                )
        self.AcionarLed = channel.unary_unary(
                '/sensor_service.SensorService/AcionarLed',
                request_serializer=SensorService__pb2.LedStatus.SerializeToString,
                response_deserializer=SensorService__pb2.LedStatus.FromString,
                )
        self.ListarLeds = channel.unary_unary(
                '/sensor_service.SensorService/ListarLeds',
                request_serializer=SensorService__pb2.LedStatus.SerializeToString,
                response_deserializer=SensorService__pb2.ListaLedStatus.FromString,
                )


class SensorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListarDispositivos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListarLeiturasSensores(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConsultarUltimaLeituraSensor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcionarLed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListarLeds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SensorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListarDispositivos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListarDispositivos,
                    request_deserializer=SensorService__pb2.EmptyMessage.FromString,
                    response_serializer=SensorService__pb2.ListaDispositivos.SerializeToString,
            ),
            'ListarLeiturasSensores': grpc.unary_unary_rpc_method_handler(
                    servicer.ListarLeiturasSensores,
                    request_deserializer=SensorService__pb2.Parametros.FromString,
                    response_serializer=SensorService__pb2.ListaDados.SerializeToString,
            ),
            'ConsultarUltimaLeituraSensor': grpc.unary_unary_rpc_method_handler(
                    servicer.ConsultarUltimaLeituraSensor,
                    request_deserializer=SensorService__pb2.Parametros.FromString,
                    response_serializer=SensorService__pb2.Dado.SerializeToString,
            ),
            'AcionarLed': grpc.unary_unary_rpc_method_handler(
                    servicer.AcionarLed,
                    request_deserializer=SensorService__pb2.LedStatus.FromString,
                    response_serializer=SensorService__pb2.LedStatus.SerializeToString,
            ),
            'ListarLeds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListarLeds,
                    request_deserializer=SensorService__pb2.LedStatus.FromString,
                    response_serializer=SensorService__pb2.ListaLedStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sensor_service.SensorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SensorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListarDispositivos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sensor_service.SensorService/ListarDispositivos',
            SensorService__pb2.EmptyMessage.SerializeToString,
            SensorService__pb2.ListaDispositivos.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListarLeiturasSensores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sensor_service.SensorService/ListarLeiturasSensores',
            SensorService__pb2.Parametros.SerializeToString,
            SensorService__pb2.ListaDados.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConsultarUltimaLeituraSensor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sensor_service.SensorService/ConsultarUltimaLeituraSensor',
            SensorService__pb2.Parametros.SerializeToString,
            SensorService__pb2.Dado.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcionarLed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sensor_service.SensorService/AcionarLed',
            SensorService__pb2.LedStatus.SerializeToString,
            SensorService__pb2.LedStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListarLeds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sensor_service.SensorService/ListarLeds',
            SensorService__pb2.LedStatus.SerializeToString,
            SensorService__pb2.ListaLedStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
